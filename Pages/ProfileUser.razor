@inject IUserService UserService
@inject IPostService PostService
@page "/profile"


<MudAppBar Elevation="0"  Square="true" Width="100%">
    <MudPaper Width="100%" Class="flex-none" Elevation="0">
        <MudContainer Height="100%" MaxWidth="MaxWidth.Small" Width="100%">
        </MudContainer>
    </MudPaper>
</MudAppBar>

<MudOverlay @bind-Visible="isVisible" DarkBackground="true" ZIndex="9999" AutoClose="true"/>
<MudPaper Width="100%" Class="flex-none" Elevation="0">
    <MudContainer Height="100%" Elevation="0" MaxWidth="MaxWidth.Small" Width="100%" >
        <MudPaper Width="100%" Class="flex-none" Elevation="0">
            <MudCard Width="100%" Height="100%" Color="Color.Background" href="#" Elevation="0" >
                <MudCardHeader>
                    <CardHeaderAvatar >
                        <MudAvatar Width="550px" >
                            <MudImage ObjectFit="ObjectFit.Cover" Width="550" Height="400" Src="../../Images/pain.png"></MudImage>
                        </MudAvatar>
                    </CardHeaderAvatar>
                    <CardHeaderContent>
                        <MudBadge Origin="Origin.CenterRight" Color="Color.Info" Bordered="true" Icon="@Icons.Material.Filled.Star">
                            <MudText Typo="Typo.subtitle1"><b>Navn Efternavn &nbsp;</b></MudText>
                        </MudBadge>
                        <MudText Typo="Typo.subtitle2"><b>&#64;@Username</b></MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudIconButton Icon="@Icons.Material.Outlined.Edit" Color="Color.Default" />
                        <MudIconButton Icon="@Icons.Material.Outlined.Archive" Color="Color.Default" />
                        <MudIconButton Icon="@Icons.Material.Outlined.Settings" Color="Color.Default" />
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardActions>
                    <MudSpacer />
                         @if (@Followers == null)
                        {   <MudText Typo="Typo.subtitle1"><b> t√¶ller </b> </MudText> } 
                        else 
                        {   <MudText OnClick="OpenOverlay" Typo="Typo.subtitle1"><b>  </b> </MudText> } 
                        
                    <MudSpacer />
                        @if (@Followers == null)
                        {   <MudText Typo="Typo.subtitle1"><b> t√¶ller </b> </MudText> } 
                        else 
                        {   <MudText OnClick="OpenOverlay" Typo="Typo.subtitle1"><b> @Followers.Count() f√∏lgere </b> </MudText> } 
                    <MudSpacer />
                        @if (@Following == null)
                        {   <MudText Typo="Typo.subtitle1"><b> t√¶ller </b> </MudText> } 
                        else 
                        {   <MudText OnClick="OpenOverlay" Typo="Typo.subtitle1"><b> @Following.Count() fulgte </b> </MudText> } 
                    <MudSpacer />
                </MudCardActions>
                <MudCardContent>
                    <MudText Typo="Typo.body2"><b>Forretningstype &nbsp;</b></MudText>
                    <MudText Typo="Typo.body2">The moon reflects your explicit beautyüåí<br/>And if you die.. I want to die with you &#64;dead.pretty_222‚ù§Ô∏è‚Äçüî•<br/>Creative Director &#64;a1media.dk </MudText>
                </MudCardContent>
                <MudCardActions>
                    <ButtonTemplate>
                        <MudFab    HtmlTag="label"
                                Elevation="0"
                                Variant="Variant.Filled"
                                Color="Color.Primary"
                                StartIcon="@Icons.Material.Filled.Add">
                        </MudFab>
                    </ButtonTemplate>
                </MudCardActions>
                <MudText Typo="Typo.subtitle2"><b>Nyt Moment?</b></MudText>
                <MudSpacer />
                <MudTabs Elevation="0" Rounded="true" PanelClass="pa-6">
                    <MudTabPanel Text="Opslag">
                        <MudGrid Spacing="4">
                            <MudItem>
                                <MudPaper Height="120px" Width="120px"/>
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px"/>
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px" />
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px" />
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px" />
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px" />
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px" />
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px" />
                            </MudItem>
                        </MudGrid>
                    </MudTabPanel>
                    <MudTabPanel Text="Gemt">
                    </MudTabPanel>
                    <MudTabPanel Text="N√¶vnt">
                    </MudTabPanel>
                </MudTabs>
            </MudCard>
            <MudSpacer />
        </MudPaper>
    </MudContainer>
</MudPaper>

@code
{
    [Parameter]
    public string Username { get; set; }

    List<string> Followers;
    List<string> Following;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }
    
    private PostModel post;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationState;

        Username = authState.User.Identity.Name;

        Followers = await UserService.GetUserFollowersAsync(Username);
        Following = await UserService.GetUserFollowingAsync(Username);

        return;
    }

    private bool isVisible;

    public void OpenOverlay()
    {
        isVisible = true;
        StateHasChanged();
    }


}