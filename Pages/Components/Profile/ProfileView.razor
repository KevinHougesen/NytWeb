@inject IUserService UserService
@inject IPostService PostService
@page "/u/{Username}"

<MudAppBar Elevation="0"  Square="true" Width="100%">
    <MudPaper Width="100%" Class="flex-none" Elevation="0">
        <MudContainer Height="100%" MaxWidth="MaxWidth.Small" Width="100%">
        </MudContainer>
    </MudPaper>
</MudAppBar>

<MudPaper Width="100%" Class="flex-none" Elevation="0">
    <MudContainer Height="100%" Elevation="0" MaxWidth="MaxWidth.Small" Width="100%" >
        <MudPaper Width="100%" Class="flex-none" Elevation="0">
            <MudCard Width="100%" Height="100%" Color="Color.Background" href="#" Elevation="0" >
                <MudCardHeader>
                    <CardHeaderAvatar >
                        <MudAvatar Width="550px" >
                            <MudImage ObjectFit="ObjectFit.Cover" Width="550" Height="400" Src="../../Images/pain.png"></MudImage>
                        </MudAvatar>
                    </CardHeaderAvatar>
                    <CardHeaderContent>
                        <MudBadge Origin="Origin.CenterRight" Color="Color.Info" Bordered="true" Icon="@Icons.Material.Filled.Star">
                            <MudText Typo="Typo.subtitle1"><b>Navn Efternavn &nbsp;</b></MudText>
                        </MudBadge>
                        <MudText Typo="Typo.subtitle2"><b>&#64;@Username</b></MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Default" />
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardActions>
                    <MudSpacer />
                         @if (@Followers == null)
                        {   <MudText Typo="Typo.subtitle1"><b> t√¶ller </b> </MudText> } 
                        else 
                        {   <MudText OnClick="OpenOverlay" Typo="Typo.subtitle1"><b>  </b> </MudText> } 
                        
                    <MudSpacer />
                        @if (@Followers == null)
                        {   <MudText Typo="Typo.subtitle1"><b> t√¶ller </b> </MudText> } 
                        else 
                        {   <MudText OnClick="OpenOverlay" Typo="Typo.subtitle1"><b> @Followers.Count() f√∏lgere </b> </MudText> } 
                    <MudSpacer />
                        @if (@Following == null)
                        {   <MudText Typo="Typo.subtitle1"><b> t√¶ller </b> </MudText> } 
                        else 
                        {   <MudText OnClick="OpenOverlay" Typo="Typo.subtitle1"><b> @Following.Count() fulgte </b> </MudText> } 
                    <MudSpacer />
                </MudCardActions>
                <MudCardContent>
                    <MudText Typo="Typo.body2"><b>Forretningstype &nbsp;</b></MudText>
                    <MudText Typo="Typo.body2">The moon reflects your explicit beautyüåí<br/>And if you die.. I want to die with you &#64;dead.pretty_222‚ù§Ô∏è‚Äçüî•<br/>Creative Director &#64;a1media.dk </MudText>
                </MudCardContent>
                <MudCardActions>
                    <ButtonTemplate>
                        <MudFab    HtmlTag="label"
                                Elevation="0"
                                Variant="Variant.Filled"
                                Color="Color.Primary"
                                StartIcon="@Icons.Material.Filled.Add">
                        </MudFab>
                    </ButtonTemplate>
                </MudCardActions>
                <MudText Typo="Typo.subtitle2"><b>Nyt Moment?</b></MudText>
                <MudSpacer />
                <MudTabs Elevation="0" Rounded="true" PanelClass="pa-6">
                    <MudTabPanel Text="Opslag">
                    @if (posts == null)
                    {
                        <MudGrid Spacing="4">
                            <MudItem>
                                <MudPaper Height="120px" Width="120px"/>
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px"/>
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px" />
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px" />
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px" />
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px" />
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px" />
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px" />
                            </MudItem>
                        </MudGrid>
                    }
                    else
                    {
                        <MudGrid Spacing="4">
                        @foreach (var post in posts)
                        {
           
                            <MudItem>
                                <MudPaper Height="120px" Width="120px">@post.Post.Content</MudPaper>
                            </MudItem>

                        };
                        </MudGrid>
                    };
                    </MudTabPanel>
                    <MudTabPanel Text="Medier">
                        <MudGrid Spacing="4">
                        @if (!string.IsNullOrEmpty(LongToken))
                        {
                            foreach ( var instaPic in mediaUrl )
                            {
                                <MudItem>
                                    <MudPaper Height="120px" Width="120px"><MudImage Width="120" Height="120" ObjectFit="ObjectFit.Contain" Src="@instaPic" Elevation="0" Class="rounded-lg"/></MudPaper>
                                </MudItem>
                            }
                        }
                        @if (posts == null)
                        {
                        <MudGrid Spacing="4">
                            <MudItem>
                                <MudPaper Height="120px" Width="120px"/>
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px"/>
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px" />
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px" />
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px" />
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px" />
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px" />
                            </MudItem>
                            <MudItem>
                                <MudPaper Height="120px" Width="120px" />
                            </MudItem>
                        </MudGrid>
                        }
                        else
                        {
                            @foreach (var post in posts)
                            {
                                if(post.Post.PicturePath != "")
                                {
                                    <MudItem>
                                        <MudPaper Height="120px" Width="120px"><MudImage Width="120" Height="120" ObjectFit="ObjectFit.Contain" Src="@post.Post.PicturePath" Elevation="0" Class="rounded-lg"/></MudPaper>
                                    </MudItem>
                                }
                            }
                        }
                        </MudGrid>
                    </MudTabPanel>
                    <MudTabPanel Text="N√¶vnt">
                    </MudTabPanel>
                </MudTabs>
            </MudCard>
            <MudSpacer />
        </MudPaper>
    </MudContainer>
</MudPaper>

@code
{
    [Parameter]
    public string Username { get; set; }

    List<string> Followers;
    List<string> Following;

    List<PostDetails> posts;
    List<InstagramMediaData> medias { get; set; } = new();
    List<InstagramMediaData> albumMedias { get; set; } = new();
    List<string> mediaUrl { get; set; } = new();
    string LongToken;

    protected override async Task OnInitializedAsync()
    {

        Followers = await UserService.GetUserFollowersAsync(Username);
        Following = await UserService.GetUserFollowingAsync(Username);
        posts = await PostService.GetUserPostsAsync(Username);    

        UserModel user = await UserService.GetUserAsync(Username);

        if (!string.IsNullOrEmpty(user.InstaToken))
        {
            LongToken = user.InstaToken;
            Console.WriteLine($"User Token: {LongToken}");
        };

        await GetMediaAsync();
    }

    private async Task GetMediaAsync()
    {
        if (!string.IsNullOrEmpty(LongToken))
        {
            var MediaContent = await UserService.GetUserInstaMediaAsync(LongToken);
            foreach (var media in MediaContent.Data)
            {
                Console.WriteLine($"ID: {media.Id}, Caption: {media.Caption}");
                var Medias = await UserService.GetUserInstaMediaDataAsync(media.Id, LongToken);
                medias.Add(Medias);
                
            };
            await GetMediaContent();
        };
    }

    private async Task GetMediaContent()
    {
        foreach ( var file in medias )
        {
            if (file.MediaType == "CAROUSEL_ALBUM")
            {
                var albumContent = await UserService.GetUserInstaMediaAlbumChildrenAsync(file.Id, LongToken);
                foreach (var albumImg in albumContent.Data)
                {
                    var AlbumMedias = await UserService.GetUserInstaMediaDataAsync(albumImg.Id, LongToken);
                    albumMedias.Add(AlbumMedias);
                };
                foreach ( var photo in albumMedias )
                {
                    string fixedUrl = photo.MediaUrl.Replace("\\/", "/");
                    mediaUrl.Add(fixedUrl);
                    Console.WriteLine("Link:" + fixedUrl);
                };
            };

            if (file.MediaType == "IMAGE")
            {
                mediaUrl.Add(file.MediaUrl);
            };
        };
        
    }
}