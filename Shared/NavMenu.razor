@using NytWeb.Authentication
@inherits LayoutComponentBase
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager NavigationManager
@inject IJSRuntime js
@inject IUserService UserService
@inject IAuthService AuthService
@inject IDialogService DialogService
<MudPaper Height="100%" Style="position: fixed;">
    <MudNavMenu Height="100%" Class="mud-width-full mud-height-full">
    
        <MudStack AlignItems="AlignItems.Center" Spacing="4" Justify="Justify.SpaceEvenly">
            <MudPaper Height="35px" />
            <MudFab DisableElevation="true" StartIcon="@Icons.Material.Outlined.Home" MudBlazor.Size="Size.Large" OnClick="@(async () => GoToHome())" Color="Color.Secondary" Rel="nofollow" Label="Hjem" Width="75%"/>
            <MudFab DisableElevation="true" StartIcon="@Icons.Material.Outlined.Search" MudBlazor.Size="Size.Large" Color="Color.Secondary" Label="Søg Nyt" />
            <MudFab DisableElevation="true" StartIcon="@Icons.Material.Outlined.MailOutline" MudBlazor.Size="Size.Large" Color="Color.Secondary" Label="Beskeder" />
            <MudFab DisableElevation="true" StartIcon="@Icons.Material.Outlined.MeetingRoom" Color="Color.Secondary" MudBlazor.Size="Size.Large" Label="Lokaler" Width="75%"/>
            <MudFab DisableElevation="true" StartIcon="@Icons.Material.Outlined.Create" OnClick="@(async () => GoToProfile())" Color="Color.Secondary" MudBlazor.Size="Size.Large" Label="Nyt Skaber" Width="75%"/>
            <MudFab DisableElevation="true" StartIcon="@Icons.Material.Outlined.Bookmarks"  Color="Color.Secondary" Label="Bogmærker" Width="75%" MudBlazor.Size="Size.Large"/>
            <MudFab DisableElevation="true" StartIcon="@Icons.Material.Outlined.Person" OnClick="@(async () => GoToProfile())" Color="Color.Secondary" Label="Profil" Width="75%" MudBlazor.Size="Size.Large"/>
            <MudFab StartIcon="@Icons.Material.Filled.PostAdd" OnClick="@((e) => OpenPostCreator())" DisableElevation="true" Color="Color.Info" Label="Skab Nyt" Width="75%"MudBlazor.Size="Size.Large"/>
            <MudToggleIconButton @bind-Toggled="@_isDarkMode"
                                    Icon="@Icons.Material.Outlined.WbSunny" Color="@Color.Warning" Title="Off" 
                                    ToggledIcon="@Icons.Material.Outlined.DarkMode" ToggledColor="@Color.Primary" ToggledTitle="On" />
        </MudStack>
    </MudNavMenu>
</MudPaper>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    private bool collapseNavMenu = true;

    [Parameter]
    public string Code { get; set; }

    

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private MudTheme _theme = new();
    private bool _isDarkMode;

    bool open = false;

    void ToggleDrawer()
    {
        open = !open;
    } 

    private async Task GoToProfile()
    {
        NavigationManager.NavigateTo("/profile");
    }

    private async Task GoToHome()
    {
        NavigationManager.NavigateTo("/");
    }
    
    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        NavigationManager.NavigateTo("/", true);
    }

    async Task OpenPostCreator()
    {
        var options = new DialogOptions { MaxWidth = MaxWidth.Medium, FullWidth = false };

        var dialog = await DialogService.ShowAsync<UserPost>("", options);
        var result = await dialog.Result;
    }
}