@using NytWeb.Authentication
@using NytWeb.Pages
@inherits LayoutComponentBase
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager NavigationManager



<PageTitle>Nyt!</PageTitle>

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" @ref="@_mudThemeProvider" Theme="_theme"/>
@if (!dataLoaded)
{
    <Loading />
}
else
{
<MudDialogProvider
    MaxWidth="MaxWidth.Medium"
    FullWidth="true"
    CloseButton="true"
    NoHeader="true"
    Position="DialogPosition.Center"
    CloseOnEscapeKey="true"/>

<MudSnackbarProvider/>

    <MudLayout Color="Color.Secondary">
        <AuthorizeView Roles="User, admin">
                <Authorized>
                    

                    <MudPaper Color="Color.Secondary">


                                <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="true">
                                    <MudDrawer @bind-Open="@open" ClipMode="DrawerClipMode.Docked" Height="100%" Class="border-r border-solid mud-border-graydefault pa-4 z-10 ma-n2"  DisableOverlay="true" Breakpoint="Breakpoint.Md" Color="Color.Secondary" ZIndex="10" PreserveOpenState="true" Variant="@DrawerVariant.Temporary" Elevation="0">
                                        
                                        <NavMenu Code="@Code"/>
                                    
                                    </MudDrawer>
                                </MudHidden>

                                




                                    <MudMainContent Color="Color.Secondary" Class="z-30 ma-n2">
                                        @Body
                                        
                                    </MudMainContent>

                                <MudHidden Breakpoint="Breakpoint.MdAndUp">
                                    <MudAppBar Bottom="true" Fixed="true" Class="border-t border-solid mud-border-graydefault pa-4 z-10 ma-n2" Color="Color.Secondary" Elevation="0">
                                        <MobileNav />
                                    </MudAppBar>
                                </MudHidden>


                                <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="true">
                                    <MudDrawer @bind-Open="@open" Anchor="Anchor.End" ClipMode="DrawerClipMode.Docked" Class="border-l border-solid pa-4 z-10 ma-n2" DisableOverlay="true" Breakpoint="Breakpoint.Md" Color="Color.Secondary" ZIndex="10" PreserveOpenState="true" Variant="@DrawerVariant.Temporary" Elevation="0">
                                        <RecMenu />
                                    </MudDrawer>
                                </MudHidden>
                    </MudPaper>
                    
                    
                </Authorized>
        </AuthorizeView>

        <AuthorizeView Roles="User">
                <Authorized>
                    

                    <MudPaper Color="Color.Secondary">

                                    <MudAppBar Bottom="true" Fixed="true" Class="border-t border-solid mud-border-graydefault pa-4 z-10 ma-n2" Color="Color.Secondary" Elevation="0">
                                        <MobileNav />
                                    </MudAppBar>

                                    <MudMainContent Color="Color.Secondary" Class="z-30 ma-n2">
                                        @Body
                                        
                                    </MudMainContent>

                    </MudPaper>
                    
                    
                </Authorized>
        </AuthorizeView>

        <AuthorizeView>
            <NotAuthorized>
            
            
                <div class="page">
                    <main style="background-color:#F5001D;">
                        <article class="content px-4" style="background-color:#F5001D;">
                            <Login />
                            
                        </article>
                    </main>
                </div>
            
            </NotAuthorized>
        </AuthorizeView>
    </MudLayout>
}

@code
{
    private MudTheme _theme = new MudTheme()
    {
        Typography = new Typography()
        {
            Caption = new Caption()
            {
                FontFamily = new[] { "Roboto", "Helvetica", "Arial", "sans-serif" },
                FontSize = "0.85rem",
                FontWeight = 500,
                LineHeight = 1.6,
                LetterSpacing = ".0075em"
            },
            H1 = new H1()
            {
                FontFamily = new[] { "Lobster" },
                FontSize = "10rem",
                FontWeight = 500,
                LineHeight = 1.6,
                LetterSpacing = ".0075em",
            },
            H2 = new H2()
            {
                FontFamily = new[] { "DRPublikBold" },
                FontSize = "3rem",
                FontWeight = 500,
                LineHeight = 1.6,
                LetterSpacing = ".0075em",
            }
        },

        Palette = new PaletteLight()
        {
            White = Colors.Shades.White,
            Primary = "#FF102C",
            Secondary = Colors.Shades.White,
            Tertiary = "#0C0C0C",
            AppbarBackground = Colors.Shades.White,
            Background = Colors.Shades.White,
            Surface = Colors.Shades.White,
            DrawerBackground = Colors.Shades.White,
            SecondaryContrastText = "#0C0C0C",
            TextSecondary = Colors.Shades.White,
            TableStriped = Colors.Shades.White,
            PrimaryContrastText = "#0C0C0C",
            BackgroundGrey = Colors.Shades.White,
            SecondaryDarken = "#FF102C",
        },
        PaletteDark = new PaletteDark()
        {
            White = Colors.Shades.White,
            Primary = "#FF102C",
            Surface = "#0C0C0C",
            Secondary = "#0C0C0C",
            Tertiary = Colors.Shades.White,
            AppbarBackground = "#0C0C0C",
            Background = "#0C0C0C",
            DrawerBackground = "#0C0C0C",
            BackgroundGrey = Colors.Shades.White,
            SecondaryContrastText = Colors.Shades.White,

            SecondaryDarken = "#FF102C",
            
        },

        LayoutProperties = new LayoutProperties()
        {
            DrawerWidthLeft = "560px",
            DrawerWidthRight = "560px",
        }
    };

    [Parameter]
    public string Code { get; set; }

    

    private MudThemeProvider _mudThemeProvider;
    
    private bool _isDarkMode;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await Task.Delay(1000);
        dataLoaded = true;

        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
        }
    }
    
    private async Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;
        StateHasChanged();
    }

    bool open = true;

    void ToggleDrawer()
    {
        open = !open;
    } 

    

    private bool dataLoaded = false;


}