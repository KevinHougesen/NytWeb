@inject IUserService UserService
@inject IPostService PostService
@page "/p/{postId}"


    @if (post == null)
    {
        <MudPaper Width="100%" Class="flex-none" Elevation="0">
            <MudContainer Height="100%" Elevation="0" MaxWidth="MaxWidth.Small" Width="100%" >
                <LoadingPost />
            </MudContainer>
        </MudPaper>
    }
    else
    {
<MudPaper Width="100%" Class="flex-none" Elevation="0">
    <MudContainer Height="100%" Elevation="0" MaxWidth="MaxWidth.Small" Width="100%" >
    <MudDivider />
        <MudCard Width="100%" Height="100%" Color="Color.Background" href="#" Elevation="0" >
            <MudCardHeader>
                <CardHeaderAvatar>
                    <MudAvatar>
                        <MudImage Src="../../Images/pain.png"></MudImage>
                    </MudAvatar>
                </CardHeaderAvatar>
                <CardHeaderContent>
                    <MudBadge Origin="Origin.CenterRight" Color="Color.Info" Bordered="true" Icon="@Icons.Material.Filled.Star">
                        <MudText Typo="Typo.body1">@post.DisplayName &nbsp;</MudText>
                    </MudBadge>
                    <MudText Typo="Typo.body2">&#64;@post.Username</MudText>
                </CardHeaderContent>
                <CardHeaderActions>
                    <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Default" />
                </CardHeaderActions>
            </MudCardHeader>
            <MudCardMedia ObjectFit="ObjectFit.Contain" Height="640" Image="../../Images/pain.png" />
            <MudCardContent>
                <MudText Typo="Typo.body2">@post.Content</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudIconButton Icon="@Icons.Material.Filled.Favorite" Color="Color.Default" />
                <MudIconButton Icon="@Icons.Material.Filled.Share" Color="Color.Default" />
            </MudCardActions>
        </MudCard>
    </MudContainer>
</MudPaper>
            
        
    }



@code
{

    [Parameter]
    public string postId { get; set; }
    
    private PostModel post;

    protected override async Task OnInitializedAsync()
    {
        post = await PostService.GetPostByIdAsync(postId);
        return;
    }
}